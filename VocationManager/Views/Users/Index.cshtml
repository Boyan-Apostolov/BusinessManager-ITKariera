@using VocationManager.Services.DTOs
@using VocationManager.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model ICollection<BaseUserDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.IsInRole(Enum.GetName(DefaultRoles.CEO)))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @nameof(BaseUserDto.Username)
            </th>
            <th>
                @nameof(BaseUserDto.Email)
            </th>
            <th>
                @nameof(BaseUserDto.FirstName)
            </th>
            <th>
                @nameof(BaseUserDto.LastName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @if (User.IsInRole(Enum.GetName(DefaultRoles.CEO)))
                    {
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                    else if (User.IsInRole(Enum.GetName(DefaultRoles.Team_Lead))) //TODO AND USER IS MEMBER OF HIS TEAM
                    {
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
