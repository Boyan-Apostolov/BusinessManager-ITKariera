@using VocationManager.Services
@using System.Security.Claims
@using GlobalConstants
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using VocationManager.Data
@model VocationManager.Services.DTOs.Teams.TeamDto

@{
    ViewData["Title"] = "Details";
}


<div class="card light-shadow m-0 m-auto col-5">
    <div class="img-fluid text-center mt-1">
        <img class="card-img-top img-fluid" style="width: 20rem" style="object-fit: contain" src="https://cdn.pixabay.com/photo/2018/03/10/12/00/teamwork-3213924_960_720.jpg" alt="Person image">
    </div>
    <input type="hidden" asp-for="Id" />
    <div class="card-body">
        <h5 class="card-title">Team details:</h5>
        <div>
            <dl class="row">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Name)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Name)
                </dd>
            </dl>
        </div>

        <hr />
        <h5>Users in team '@Model.Name':</h5>
        @if (Model.Users.Count != 0)
        {
            @foreach (var user in Model.Users)
            {
                <div class="d-flex align-items-center justify-content-between">
                    <span class="m-2">
                        @(user.FirstName)
                        @(user.LastName)
                        @if (user.RoleName.Contains(Enum.GetName(DefaultRoles.Team_Lead)))
                        {
                            <i class='fa-solid fa-crown text-warning' title='Leader'></i>
                        }
                        else if (user.RoleName.Contains(Enum.GetName(DefaultRoles.Developer)))
                        {
                            <i class="fa-solid fa-code" title="Developer"></i>
                        }
                    </span>
                    
                    <div class="control-buttons">
                        @if (User.IsInRole(Enum.GetName(DefaultRoles.CEO)) || User.IsInRole(Enum.GetName(DefaultRoles.Team_Lead)))
                        {
                            <button class="btn btn-danger remove-user btn-sm" title="Remove from team" data-user-id="@user.Id">
                                <i class="fas fa-user-times"></i>
                            </button>
                        }

                        <a asp-controller="Users" asp-action="Details" asp-route-id="@user.Id">
                            <button class="btn btn-sm btn-primary">
                                <i class="fas fa-info-circle"></i> More info
                            </button>
                        </a>
                    </div>
                </div>
            }
        }
        else
        {
            <span>(none)</span>
            <br />
        }


        <hr />
        <h5>Projects for team '@Model.Name':</h5>
        @if (Model.Projects.Count != 0)
        {
            @foreach (var project in Model.Projects)
            {
                <div class="d-flex align-items-center justify-content-between">
                    <span class="m-2">
                        @(project.Name)
                        @switch (project.Status)
                        {
                            case ProjectStatusType.Not_Started:
                                <button class="btn btn-sm btn-secondary">
                                    <i class="fas fa-spinner"></i> Not started
                                </button>
                                break;
                            case ProjectStatusType.In_Progress:
                                <button class="btn btn-sm btn-warning">
                                    <i class="fas fa-tools"></i> In Progress
                                </button>
                                break;
                            case ProjectStatusType.Completed:
                                <button class="btn btn-sm btn-success">
                                    <i class="fas fa-check"></i> Completed
                                </button>
                                break;
                            case ProjectStatusType.Canceled:
                                <button class="btn btn-sm btn-danger">
                                    <i class="fas fa-times"></i> Canceled
                                </button>
                                break;
                        }
                    </span>

                    <a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id">
                        <button class="btn btn-sm btn-primary">
                            <i class="fas fa-info-circle"></i> More info
                        </button>
                    </a>
                </div>
            }
        }
        else
        {
            <span>(none)</span>
            <br />
        }
        <br />
        <a asp-action="Index">
            <button class="btn btn-primary">
                <i class="fas fa-backward"></i> Back to List
            </button>
        </a>

        @if (User.IsInRole(Enum.GetName(DefaultRoles.CEO)) || User.IsInRole(Enum.GetName(DefaultRoles.Team_Lead)))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id">
                <button class="btn btn-warning">
                    <i class="fas fa-edit"></i> Edit
                </button>
            </a>

            <a asp-action="Delete" asp-route-id="@Model?.Id">
                <button class="btn btn-danger">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
            </a>
        }
    </div>
</div>
<script>
    $('.remove-user').on("click",
        function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You can always assign the user again from their Details page.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    let model = {
                        userId: $(this).attr('data-user-id'),
                        teamId: $('#Id').val()
                    };

                    $.ajax({
                        type: "POST",
                        url: "/Users/RemoveUserFromTeam",
                        data: model,
                        dataType: "json",
                        success: function (response) {
                            Swal.fire(
                                'Removed!',
                                'User was removed from the team.',
                                'success'
                            ).then(() => window.location.reload());
                        },
                        error: function (event, jqxhr, settings, thrownError) {
                            if (event.status != 200) {
                                Swal.fire(
                                    'Error!',
                                    event.responseText.split(': ')[1].split("\r\n")[0],
                                    'error'
                                );
                            }
                        }
                    });
                }
            });
        });
</script>