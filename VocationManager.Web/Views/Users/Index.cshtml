@using VocationManager.Services.DTOs
@using VocationManager.Services
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Security.Claims
@model PaginatedUsersCollectionDto

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.IsInRole(Enum.GetName(DefaultRoles.CEO)))
{
    <p>
        <a asp-action="Create">
            <button class="btn btn-success">
                <i class="fas fa-user-plus"></i> New User
            </button>
        </a>
    </p>
}
@if (Model.Users.Any())
{
    <div class="users-wrapper d-flex flex-wrap justify-content-evenly">
        @foreach (var user in Model.Users)
        {
            <div class="card light-shadow m-2" style="flex-basis: 26%">
                <div class="card-body">
                    <h5 class="card-title">@($"{user.FirstName} {user.LastName}")</h5>
                    <h6 class="card-subtitle mb-2 text-muted">@($"{($"{user.RoleName} @ Team_NAME")}")</h6>
                    <p class="card-text">@user.Username</p>
                    
                    <hr/>
                    <div class="buttons-holder d-flex flex-wrap">
                        <a asp-action="Details" asp-route-id="@user.Id" class="mb-1" style="width: 95%">
                            <button class="btn btn-primary" style="width: 95%">
                                <i class="fas fa-info-circle"></i> More info
                            </button>
                        </a>
                    
                        @if (User.IsInRole(Enum.GetName(DefaultRoles.CEO)))
                        {
                            <div class="d-flex justify-content-around" style="width: 95%">
                                <a asp-action="Edit" asp-route-id="@user.Id" class="m-1">
                                    <button class="btn btn-warning">
                                        <i class="fas fa-user-edit"></i> Edit
                                    </button>
                                </a>

                                @if (User.FindFirstValue(ClaimTypes.NameIdentifier) != user.Id)
                                {
                                    <a asp-action="Delete" asp-route-id="@user.Id" class="m-1">
                                        <button class="btn btn-danger">
                                            <i class="fas fa-user-times"></i> Delete
                                        </button>
                                    </a>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    @await Html.PartialAsync("_SearchAndPaginatePartial", Model.Paginator)
}
else
{
    <h6>No users found!</h6>
}
@*
                    @if (User.IsInRole(Enum.GetName(DefaultRoles.CEO)))
                    {
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                    else if (User.IsInRole(Enum.GetName(DefaultRoles.Team_Lead))) //TODO AND USER IS MEMBER OF HIS TEAM
                    {
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    }

*@