@using Microsoft.AspNetCore.Mvc.TagHelpers;
@using BusinessManager.Data.Enums
@model BusinessManager.Services.DTOs.TimeOffs.TimeOffRequestDto;

@{
    ViewData["Title"] = "Edit";

    var requestTypes = ((IEnumerable<KeyValuePair<string, string>>)this.ViewBag.RequestTypes).Select(x => new SelectListItem(x.Value, x.Key.ToString()));
}

<div class="card light-shadow m-0 m-auto col-5">
    <div class="img-fluid text-center mt-2">
        <img class="card-img-top img-fluid" style="width: 20rem" style="object-fit: contain" src="https://images.unsplash.com/photo-1487017159836-4e23ece2e4cf?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1471&q=80" alt="edit image">
    </div>
    <div class="card-body">
        <h5 class="card-title">Edit time-off request</h5>
        <div>
            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="ExternalFileUrl" />
                <input type="hidden" asp-for="IsApproved" />
                <input type="hidden" asp-for="CreatedOn" />
                <input type="hidden" asp-for="RequestedById" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="From" class="control-label"></label>
                    <input asp-for="From" class="form-control" />
                    <span asp-validation-for="From" class="text-danger"></span>
                </div>

                <div class="form-group to-date-holder">
                    <label asp-for="To" class="control-label"></label>
                    <input asp-for="To" class="form-control" />
                    <span asp-validation-for="To" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Type" class="control-label">Request type:</label>
                    <select asp-for="Type" class="form-control form-control-lg" asp-items="@requestTypes">
                        <option value="" selected="">Select request type...</option>
                    </select>
                </div>


                <div class="form-group half-day-holder">
                    <label asp-for="IsHalfDay" class="control-label"></label>
                    <input asp-for="IsHalfDay" />
                    <span asp-validation-for="IsHalfDay" class="text-danger"></span>
                </div>

                <div class="form-group file-holder-holder">
                    <br />
                    @if (Model.Type == TimeOffType.Sick && !string.IsNullOrWhiteSpace(Model.ExternalFileUrl))
                    {
                        <button class="btn btn-sm btn-primary file-download-button" type="button" data-file-url="@(Model.ExternalFileUrl)">
                            <i class="fas fa-info-circle"></i> Existing file
                        </button>
                    }
                    <br />
                    <label asp-for="ExternalFile" class="control-label"></label>
                    <input asp-for="ExternalFile" />
                    <span asp-validation-for="ExternalFile" class="text-danger"></span>
                </div>


                <br />
                <div class="form-group d-flex justify-content-evenly">
                    <input type="submit" id="submit-btn" value="Edit" class="btn btn-success" />
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/js/timeoff-validations.js"></script>

@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<script>
    $('.file-download-button').click(function () {
        let url = $(this).attr('data-file-url');

        window.open(`/TimeOffs/DownloadTimeOffFile?path=${url}`);
    });
</script>